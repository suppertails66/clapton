// Level 9 cave

// Free space defines
// Main chunk (after level pattern definitions)
// 0x200 / 512
$freespace_main = "0x2FE00";

// unused pattern table space
// 0xA3F / 2623
$freespace_pattable = "0x2E480";

// cave music -- 0x2A2? / 674
//$freespace_cave = "0xC817";

// base music -- 0x1A6? / 422
$freespace_base = "0x2CB02";

// boss music -- 0x49? / 73
//$freespace_boss = "0x20AB9";

// iris/keycard 0x9349 (0x39 / 57)
$freespace_keycard = "0x2D349";

// cyclone (-19b music switch code) 0x926C 0x62 (0x4F / 79)
// real total: 97
$freespace_cyclone = "0x2D27F";

// Write generic data in the free block past the end of level data
//_GENERICADDR = $freespace_main;
// Overwrite the real channels at their original locations so we
// don't have to update the pointers
//_SQ1ADDR = 0xCB02;
//_SQ2ADDR = 0xCBBA;
//_TRIADDR = 0xCC3A;
// 10C / 268?
_SQ1ADDR = 0x2C817;
// 0x74 / 116
_SQ2ADDR = 0x2C923;
// ?
_TRIADDR = 0x2C997;

// Note duration macros. 32nd = 3 ticks, 16th = 6, etc.
/*$32 = "3";
$16 = "6";
$8  = "12";
$4  = "24";
$2  = "48";
$1  = "96";
$24 = "9";
$12 = "18";
$6 = "36";
$3 = "72";
$triplet = "16"; */
/*$32 = "3";
$16 = "6";
$8  = "12";
$4  = "24";
$2  = "48";
$1  = "96";
$24 = "9";
$12 = "18";
$6 = "36";
$3 = "72";
$triplet = "16"; */
$32_1 = "4";
$32_2 = "3";
$16 = "7";
$8  = "14";
$4  = "28";
$2  = "56";
$1  = "112";
$1half  = "224";
// WRONG
//$24 = "10";
$12 = "21";
$6 = "42";
$3 = "84";


	 

//*******************************
// Square defines
//*******************************
// Pulse width register macros
$sq12 = "REG1(0x3F)";
$sq25 = "REG1(0x7F)";
$sq50 = "REG1(0xBF)";
$sq75 = "REG1(0xFF)";

// Definition of regular/delay volume
/*$lead_l = "CHANVOL(0x0A)";
$lead_q = "CHANVOL(0x06)";
$back_l = "CHANVOL(0x09)";
$back_l2 = "CHANVOL(0x07)";
$back_q = "CHANVOL(0x05)"; */
$lead_l = "CHANVOL(0x0C)";
$lead_q = "CHANVOL(0x06)";
$back_l = "CHANVOL(0x0A)";
$back_l2 = "CHANVOL(0x08)";
$back_q = "CHANVOL(0x05)";

$intro1_32 = "CHANVOL(0x06)";
$intro1_16 = "CHANVOL(0x03)";
$intro1_8 = "CHANVOL(0x02)";

$sq_q = "CHANVOL(0x05)";
$sq_l = "CHANVOL(0x0A)";
$sq_q2 = "CHANVOL(0x06)";
$sq_l2 = "CHANVOL(0x0C)";
$sq_q3 = "CHANVOL(0x08)";
$sq_l3 = "CHANVOL(0x0C)";

$sq_fade0 = "CHANVOL(0x02)";
$sq_fade1 = "CHANVOL(0x04)";
$sq_fade2 = "CHANVOL(0x07)";
$sq_fade3 = "CHANVOL(0x0A)";
$sq_fade4 = "CHANVOL(0x0C)";

$legato = "REG2(0x08)";
$intro_staccato = "REG2(0x38)";
$lead_staccato = "REG2(0x48)";
$back_staccato = "REG2(0x48)";
$back_legato = "REG2(0x08)";
$tri32nd_staccato = "REG2(0x38)";
$tri16th_staccato = "REG2(0x68)";

//*******************************
// Triangle defines
//*******************************
//$trkick = "f3 1 eb3 1 c3 1 a2 1 f#2 1 d2 1";
//$trkick = "c3 1 a2 1 f#2 1 d#2 1 c1 1 a1 1";
//$trkick = "c3 2 f#2 2 c1 2";
//$trkick_full = "c3 1 a2 1 f#2 1 d#2 1 c1 1 a1 1";
//$trkick_full = "g3 1 e3 1 c#3 1 a#2 1 g2 1 e2 1";
// ideal
//$trkick = "f3 1 d3 1 b2 1 g#2 1 f2 1 d2 1";
//$trkick = "f3 1 d3 1 b2 1 g2 1 d2 2";
//$trkick = "c3 2 f#2 2 c1 2";
$trkick_intro = "a3 1 f#3 1 e3 1 b2 1 a2 1 f#2 1";
//$trkick = "e3 1 c#3 1 b2 1 f#2 1 e2 1 c#2 1";
$trkick = "a3 1 f#3 1 d3 1 b2 1 g2 1 d#2 2";
$trrevsn = "g#1 1 b1 1 e2 1 f#2 1 a2 1 b2 1 d3 1 e3 1 g3 1 a3 1 c4 1 d4 1";

//*******************************
// Noise defines
//*******************************
$kick = "NOISE(0x81, 0x8F)";
//$sn = "NOISE(0x81, 0x06)";
//$sn = "REG2(0x58) NOISE(0x96, 0x06)";
//$sn = "REG2(0x58) NOISE(0x96, 0x08)";
//$sn = "REG2(0x58) NOISE(0x97, 0x09)";
//$sn = "REG2(0x58) NOISE(0x98, 0x09)";
$sn = "REG2(0x68) NOISE(0x98, 0x09)";
//$sn2 = "NOISE(0x96, 0x06)";
$ch = "NOISE(0x81, 0x01)";
$oh = "NOISE(0x85, 0x01)";
//$crash = "REG2(0x08) NOISE(0x8C, 0x01)";
$crash = "REG2(0x08) NOISE(0x8E, 0x01)";
$hiss = "NOISE(0x92, 0x0F)";

$hissi1 = "NOISE(0x98, 0x01)";
$hissi2 = "NOISE(0x98, 0x03)";
$hissi3 = "NOISE(0x98, 0x05)";
$hissi4 = "NOISE(0x98, 0x07)";
$hissi1_d = "NOISE(0x83, 0x01)";
$hissi2_d = "NOISE(0x83, 0x03)";
$hissi3_d = "NOISE(0x83, 0x05)";
$hissi4_d = "NOISE(0x83, 0x07)";



//*******************************
// Misc defines
//*******************************
// Sweep
$sweepoff = "REG3(0x00)";
$introsweep = "REG3(0x93)";
$pat5_leadsweep = "REG3(0x94)";
$pat7_leaddecay = "DECAY(10)";

//$meldecay = "DECAY(2)";
//$backdecay = "DECAY(1)";
$meldecay = "REG2(0x08)";
$backdecay = "REG2(0x38)";
$melstaccato = "REG2(0x38)";
$mellegato = "REG2(0x08)";

//*******************************
// Song init
//*******************************
// Song init. This only needs to happen on one channel,
// and only for cave music (because it plays first no matter what).
_SQ1 = { DRIVERDELAY(0x00) TEMPO(1) MASTSHIFT(0) };
//_SQ1 = { TEMPO(1) };
// Channel init
_SQ1 = { CHANSHIFT(0) EFFECTS(0) DECAY(10) $lead_l
	 $sq25 REG2(0x08) };
_SQ2 = { CHANSHIFT(0) EFFECTS(0) DECAY(10) $lead_l
	 $sq25 REG2(0x08) };
_TRI = { CHANSHIFT(0) EFFECTS(0)
	 REG1(0xFF) REG2(0x08) };

// "Declarations" of jump points for each channel.
// This is an esoteric workaround for the fact that the compiler is
// one-pass, making it normally impossible (e.g.) to jump from an earlier
// position to one defined later. By using "+" instead of "^" when
// defining a label, the position will be offset by 3. Assuming the
// label is immediately followed by a JUMP() command, the label
// then references the data following the jump. The data for the three
// "real" channels will be placed on the "generic" channel in the middle
// of the file. To save space, we need to put some data in those
// channels, so the data at the end of the track goes there.
//
// Ultimately, this is a hacky and entirely too complicated way of getting
// tracks to loop to an arbitrary point.
_SQ1 = { +sq1_reentry };
_SQ2 = { +sq2_reentry };
_TRI = { +tri_reentry };





_GENERICADDR = $freespace_base;

_GENERIC = {

  ^lead_main4_1
  
  d3 $16
  a5 $16
  d4 $16
  g3 $16
  f4 $16
  g5 $16
  d4 $16
  a3 $16
  d4 $16
  g5 $16
  f4 $16
  g3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main_1
  
  $crash  $trkick
          r $16
  $sn     d2 $16
          d3 $16
  $kick   r $16
          d3 $16
  
  $sn     $trkick
          d3 $16
          d2 $16
  $sn     d3 $16
          r $16
  $crash  d3 $16
  
  $kick   $trkick
          r $16
          d2 $16
  $sn     d3 $16
          r $16
  $sn     d3 $16
  
  $kick   $trkick
  $sn     d3 $16
  $sn     d2 $16
  $sn     d3 $16
          r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_intro_1
  
          $trkick
          r $16
          d2 $16
          d3 $16
          r $16
          d3 $16

  ^bass_intro_1_entry2
  
          $trkick
          d3 $16
          d2 $16
          d3 $16
          r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^back_main_1

  r $16
  d2 $16
  f2 $16
  d2 $16
  g2 $16
  c2 $16
  g2 $16
  c2 $16
  
  RET()
};

_GENERIC = {

  ^back_main2_1

  // JC0
  
  SETLOOP()
    d3 1 d4 1 d3 1
  REPLAYLOOP(1)
  d3 1
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  SETLOOP()
    f3 1 f4 1 f3 1
  REPLAYLOOP(3)
  f3 1 f4 1

  ^back_main2_1_wholestepdown
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  SETLOOP()
    d3 1 d4 1 d3 1
  REPLAYLOOP(1)
  d3 1
  
  RET()
};

_GENERIC = {

  ^back_main2_2

  // JC0
  
  SETLOOP()
    c3 1 c4 1 c3 1
  REPLAYLOOP(1)
  c3 1
  
  SETLOOP()
    d3 1 d4 1 d3 1
  REPLAYLOOP(1)
  d3 1
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(3)
  e3 1 e4 1
  
  RET()
};

_GENERIC = {

  ^back_main2_3

  // JC0
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  SETLOOP()
    f3 1 f4 1 f3 1
  REPLAYLOOP(1)
  f3 1
  
  SETLOOP()
    g3 1 g4 1 g3 1
  REPLAYLOOP(3)
  g3 1 g4 1
  
  SETLOOP()
    f3 1 f4 1 f3 1
  REPLAYLOOP(1)
  f3 1
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  RET()
};

/*_GENERIC = {

  ^back_main2_wholestepup

  // JC0
  
  SETLOOP()
    d3 1 d4 1 d3 1
  REPLAYLOOP(1)
  d3 1

  ^back_main2_wholestepup_entry2
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  RET()
};

_GENERIC = {

  ^back_main2_halfstepup

  // JC0
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1

  ^back_main2_halfstepup_entry2
  
  SETLOOP()
    f3 1 f4 1 f3 1
  REPLAYLOOP(1)
  f3 1
  
  RET()
};

_GENERIC = {

  ^back_main2_wholestepdown

  // JC0
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1

  ^back_main2_wholestepdown_entry2
  
  SETLOOP()
    d3 1 d4 1 d3 1
  REPLAYLOOP(1)
  d3 1
  
  RET()
};

_GENERIC = {

  ^back_main2_halfstepdown

  // JC0
  
  SETLOOP()
    f3 1 f4 1 f3 1
  REPLAYLOOP(1)
  f3 1

  ^back_main2_halfstepdown_entry2
  
  SETLOOP()
    e3 1 e4 1 e3 1
  REPLAYLOOP(1)
  e3 1
  
  RET()
}; */







_GENERICADDR = $freespace_main;

_GENERIC = {

  ^bass_main_2
  
  $kick   $trkick
          r $16
          d2 $16
  $sn     d3 $16
          r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main_2_2
  
  $kick   $trkick
          d3 $16
          d2 $16
  $sn     d3 $16
          r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main_3
  
  $kick   $trkick
          r $16
  $sn     d2 $16
          d3 $16
  $sn     r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^back_main3_1
  
  SETLOOP()
    a1 $16
    r $16
    a1 $32_1 r $32_2
  REPLAYLOOP(1)
  d2 $16
  f2 $16
  
  g2 $16
  d2 $8
  f3 $32_1 r $32_2
  g1 $16
  r $16
  d2 $16
  g2 $32_1 r $32_2
  
  d3 $16
  g3 $16
  d2 $16
  d3 $32_1 r $32_2
  d2 $16
  f3 $16
  e3 $16
  d3 $16
  
  RET()
};

_GENERIC = {

  ^back_main4_1

  g#2 $16
  d#2 $16
  a#2 $16
  d#2 $16
  r $16
  d#2 $16
  f#2 $16
  d#2 $16
  g#2 $16
  d#2 $16
  a#2 $16
  d#2 $16
  
  RET()
};

_GENERIC = {

  ^bass_main2_1
  
  $crash  $trkick
          r $16
          d2 $16
  $sn
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
          r $16
    // J47
    SETLOOP()
      c5 1 e5 1 g5 1
    REPLAYLOOP(1)
    c5 1
    
  //------------------
  
  $kick   $trkick
          r $16
          c2 $16
    $sn
    // J47
    SETLOOP()
      c5 1 e5 1 g5 1
    REPLAYLOOP(1)
    c5 1
  $sn     r $16
    $oh
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  
  RET()
};






_GENERICADDR = $freespace_pattable;

_GENERIC = {

  ^bass_main_3_2
  
  $kick   $trkick
          d3 $16
          d2 $16
  $crash  d3 $16
          r $16
          d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main2_1_2
  
  $sn     $trkick
          r $16
  $kick   c2 $16
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  $sn     r $16
    // J38
    SETLOOP()
      e5 1 g5 1 c6 1
    REPLAYLOOP(1)
    e5 1
    
  //------------------
  
  $sn     $trkick
          r $16
  $ch     d2 $16
  $crash  r $12
  
  RET()
};

_GENERIC = {

  ^bass_main2_1_3
  
  $kick   $trkick
          r $16
  $sn     c2 $16
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  $kick   r $16
    // J59
    SETLOOP()
      g5 1 c6 1 e6 1
    REPLAYLOOP(1)
    g5 1
    
  //------------------
  
  $sn     $trkick
          r $16
  $sn     d2 $16
    $sn     
    // J38
    SETLOOP()
      e4 1 g4 1 c5 1
    REPLAYLOOP(6)
  
  RET()
};

_GENERIC = {

  ^bass_main3_1
  
  $kick   $trkick
          a#1 $16
          a#2 $16
  $sn     a#1 $16
          r $16
          a#1 $16
  
  RET()
};

_GENERIC = {

  ^bass_main3_1_2
  
  $kick   $trkick
          a#1 $16
  $kick   a#2 $16
  $sn     a#1 $16
          r $16
          a#1 $16
  
  RET()
};

_GENERIC = {

  ^bass_main3_2
  
  $kick   $trkick
          a#1 $16
  $sn     a#2 $16
          a#1 $16
          r $16
          a#1 $16
  
  RET()
};

_GENERIC = {

  ^bass_main3_3
  
  $sn     $trkick
          c2 $16
  $sn     c3 $16
          c2 $16
          r $16
  $kick   c2 $16
  
  $sn     $trkick
          d2 $16
          d3 $16
  $sn     d2 $16
          r $16
          d2 $16
  
  RET()
};

_GENERIC = {

  ^bass_main3_4
  
  $crash  $trkick
          a1 $16
  $kick   a2 $16
          a1 $16
          r $16
  $kick   a1 $16
  
  $sn     $trkick
          a1 $16
  $kick   a2 $16
          a1 $16
          r $16
  $sn     a1 $16
  
  SETLOOP()
    $sn     a1 $16
    $sn     a2 $16
  REPLAYLOOP(2)
  $kick   a1 $16
          r $16
  $crash  r $16
  $crash  a2 $12
  
  RET()
};

_GENERIC = {

  ^bass_main4_1
  
  $crash  $trkick
          r $16
          a2 $32_1  r $32_2
    $sn
    // J47
    SETLOOP()
      a5 1 c#6 1 e6 1
    REPLAYLOOP(1)
    a5 1
          r $16
  $ch     a2 $32_1  r $32_2
  
  //-----------------------------
  
  $kick   $trkick
          f2 $16
          g2 $16
    $sn
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
    $sn
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  $sn     f3 $32_1 r $32_2
  
  RET()
};

_GENERIC = {

  ^bass_main4_1_2
  
  $kick   $trkick
          r $16
    $ch
    // J58
    SETLOOP()
      e5 1 a5 1 c6 1
    REPLAYLOOP(1)
    e5 1
          g2 $32_1  r $32_2
  $sn     d3 $16
  $sn     g3 $16
  $sn     d2 $16
  $sn     $trkick
  $ch     $trkick
  
  //-----------------------------

    $sn
    // J37
    SETLOOP()
      f5 1 a5 1 d6 1
    REPLAYLOOP(3)
    f5 1 a5 1
          d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main4_1_3
  
  $kick   $trkick
          r $16
    $ch
    // J47
    SETLOOP()
      e5 1 g#5 1 b5 1
    REPLAYLOOP(1)
    e5 1
  $kick   e2 $32_1  r $32_2
          d3 $16
  $ch     g#3 $16
          e2 $16
  $kick   $trkick
  $ch     $trkick
          
  
  RET()
};

_GENERIC = {

  ^bass_main4_1_4

    $sn
    // J37
    SETLOOP()
      a5 1 c#6 1 e6 1
    REPLAYLOOP(3)
    a5 1 c#6 1
  $sn     a2 $16
          
  
  RET()
};

_GENERIC = {

  ^bass_main4_1_5

    $sn
    // J37
    SETLOOP()
      a5 1 c#6 1 e6 1
    REPLAYLOOP(1)
    a5 1
    $sn
    // J37
    SETLOOP()
      a5 1 c#6 1 e6 1
    REPLAYLOOP(1)
    a5 1
  $sn     a2 $16
          
  
  RET()
};

_GENERIC = {

  ^bass_main4_2
  
  $crash  $trkick
          r $16
  $ch     a2 $32_1  r $32_2
    $crash
    // J47
    SETLOOP()
      a5 1 c#6 1 e6 1
    REPLAYLOOP(1)
    a5 1
          r $16
  $ch     a2 $32_1  r $32_2
  
  //-----------------------------
  
  $crash  $trkick
          f2 $16
  $ch     g2 $16
    $crash
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
    $sn
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  $sn     f3 $32_1 r $32_2
  
  //--------------------------
  
  $sn     SETLOOP() $trkick $sn r $16 REPLAYLOOP(2)
  SETLOOP()
    $sn     $trkick
  REPLAYLOOP(3)
  SETLOOP()
    $sn r $16
  REPLAYLOOP(1)
  
  RET()
};

_GENERIC = {

  ^bass_main5_1
  
  $crash    $trkick
            r $16
  $kick     d2 $16
            d3 $16
  $kick     r $16
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  
  //---------------------
  
  $sn       $trkick
            r $16
            d2 $16
    $kick
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  $kick     r $16
  $kick     d3 $16
  
  RET()
};

_GENERIC = {

  ^bass_main5_2
  
  $sn      $trkick
            r $16
  $sn       d2 $16
            d3 $16
  $sn       r $16
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
  
  //---------------------
  
  $sn       $trkick
            r $16
  $crash    d2 $16
    // J37
    SETLOOP()
      d5 1 f5 1 a5 1
    REPLAYLOOP(1)
    d5 1
            r $16
            d3 $16
  
  RET()
};

_GENERIC = {

  ^lead_main_1

  r $16
  
  ^lead_main_1_entry2
  
  d2 $16
  f2 $16
  d2 $16
  g2 $16
  d2 $16
  a2 $16
  d2 $16
  
  RET()
};

_GENERIC = {

  ^lead_main_2

  r $16
  c2 $16
  e2 $16
  d2 $16
  
  g2 $16
  d2 $16
  a2 $16
  d2 $16
  
  c3 $16
  g2 $16
  e3 $16
  c3 $8
  
  g2 $12
  
  RET()
};

_GENERIC = {

  ^lead_main2_1

          e4 $8  $lead_q e4 $16
  $lead_l d4 $8  $lead_q d4 $16
  $lead_l g4 $16  $lead_q d4 $16
  $lead_l f4 $16  $lead_q g4 $16
  $lead_l e4 $16  $lead_q f4 $16
  $lead_l d4 $8  $lead_q e4 $16
  $lead_l c4 $8  $lead_q c4 $16
  $lead_l a#3 $8  $lead_q a#3 $16
  $lead_l c4 $8  $lead_q c4 $16
  $lead_l d4 $2
  $lead_q d4 $8
  
  $lead_l
  
  RET()
};

_GENERIC = {

  ^lead_main2_2

  c2 $16
  a#1 $16
  e2 $16
  a#1 $16
  f2 $16
  a#1 $16
  
  RET()
};

_GENERIC = {

  ^lead_main2_3

          e4 $8  $lead_q e4 $16
  $lead_l d4 $8  $lead_q d4 $16
  $lead_l a4 $16  $lead_q a4 $16
  $lead_l g4 $16  $lead_q a4 $16
  $lead_l f4 $16  $lead_q g4 $16
  $lead_l e4 $16  $lead_q f4 $16
  $lead_l f4 $16  $lead_q e4 $16
  $lead_l d4 $16  $lead_q f4 $16
  $lead_l e4 $16  $lead_q d4 $16
  $lead_l f4 $16  $lead_q e4 $16
  $lead_l g4 $16  $lead_q f4 $16
  $lead_l a4 $2
  $lead_q a4 $8
  
  $lead_l
  
  RET()
};

_GENERIC = {

  ^lead_main3_1

          a4 $32_1          r $32_2
          a#4 $32_1  $lead_q a4 $32_2
  $lead_l g4 $32_1  $lead_q a#4 $32_2
  $lead_l a4 $32_1  $lead_q g4 $32_2
  $lead_l f4 $32_1  $lead_q a4 $32_2
  $lead_l g4 $32_1  $lead_q f4 $32_2
  $lead_l e4 $32_1  $lead_q g4 $32_2
  $lead_l f4 $32_1  $lead_q e4 $32_2
  
  $lead_l d4 $32_1  $lead_q f4 $32_2
  $lead_l e4 $32_1  $lead_q d4 $32_2
  $lead_l c4 $32_1  $lead_q e4 $32_2
  $lead_l d4 $32_1  $lead_q c4 $32_2
  
  $lead_l
  
  RET()
};

_GENERIC = {

  ^lead_main3_2
  
          e4 $32_1  $lead_q d4 $32_2
  $lead_l f4 $32_1  $lead_q e4 $32_2
  $lead_l g4 $32_1  $lead_q f4 $32_2
  $lead_l g4 $32_1  $lead_q g4 $32_2
  
  $lead_l f4 $32_1  $lead_q g4 $32_2
  $lead_l e4 $32_1  $lead_q f4 $32_2
  $lead_l f4 $12
  $lead_q f4 $12
  
  $lead_l
  
  RET()
};

_GENERIC = {

  ^lead_main3_3
  
  e3 $16
  f3 $16
  g3 $16
  f3 $16
  e3 $16
  f3 $16
  g3 $16
  a3 $16
  a#3 $16
  a3 $16
  g3 $16
  a3 $16
  
  RET()
};

_GENERIC = {

  ^lead_main3_4

  SETLOOP()
    e4 $16
    a#3 $16
  REPLAYLOOP(2)
  f#4 $8
  REG3(0xAD) f#4 $12
  
  RET()
};

_GENERIC = {

  ^sq1_overflow
  
  // 0
  
  r 161
  r 161
  
  $ch r $16
  $ch r $16
  
  // 1
  
  SETLOOP()
    $ch r $4
  REPLAYLOOP(10)
  
  SETLOOP()
    $sn r $16
  REPLAYLOOP(3)
  
  // 2
  
  ^sq1_loop
  
  $legato
  $sq25
  
  SETLOOP()
    d2 $16
    CALL(^lead_main_1_entry2)
      CALL(^lead_main_1)
      CALL(^lead_main_1)
      CALL(^lead_main_1)
    CALL(^lead_main_2)
  REPLAYLOOP(1)
  
  // 4
    
  CHANSHIFT(12)
  d2 $16
  CALL(^lead_main_1_entry2)
  SETLOOP()
    CALL(^lead_main_1)
  REPLAYLOOP(2)
  CALL(^lead_main_2)
  
  // 5
  
  d2 $16
  CALL(^lead_main_1_entry2)
  CALL(^lead_main_1)
  CALL(^lead_main_1)
  CHANSHIFT(0)
  r $16
  d3 $16
  f3 $16
  d3 $16
  g3 $16
  d3 $16
  
  // 5.5
  
          a3 $16
  $lead_q a3 $16
  $lead_l f3 $16
  $lead_q f3 $16
  $lead_l d3 $16
  $lead_q d3 $16
  $lead_l d4 $16
  $lead_q d4 $16
  $lead_l a3 $16
  $lead_q a3 $16
  $lead_l d4 $16
  $lead_q d4 $16
  $lead_l f4 $16
  $lead_q f4 $16
  $lead_l c4 $16
  $lead_q c4 $16
  $lead_l f4 $16
  $lead_q f4 $16
  $lead_l g4 $3
  $lead_q g4 $12
  $lead_l
  
  r 63
  
  $sq50
  
  a3 $16
  d4 $16
  f4 $16
  
  // 6
  
  CALL(^lead_main2_1)
  CALL(^lead_main2_2)
  g2 $16
  e2 $16
  c3 $16
  g2 $8
  a3 $16
  d4 $16
  f4 $16
  
  // 7
  
  CALL(^lead_main2_3)
  CALL(^lead_main2_2)
  g2 $8
  d3 $8
  d4 $8
  a4 $8
  
  // 8
  
          f4 $4
  $lead_q f4 $4
  $lead_l e4 $16
          f4 $16
          e4 $16
  $lead_q e4 $16
  $lead_l d4 $4
  $lead_q d4 $4
  $lead_l r $16
          c4 $12
          
  // 8.5
  
          e4 $16
          f4 $32_1  $lead_q e4 $32_2
  $lead_l e4 $8
          f4 $16
          e4 $32_1  $lead_q f4 $32_2
  $lead_l d4 $16
  $lead_q f4 $16
          e4 $16
          d4 $16
          r $8
  $lead_l
  $sq12
  SETLOOP()
    c4 $16
    d4 $16
  REPLAYLOOP(2)
          d4 $16
          r $16
  $lead_q c4 $16
          d4 $16
          d4 $16
  $lead_l
  
  r $6
  
  // 9
  
  $sq25
  
  d3 $16
  f3 $16
  a3 $16
  f3 $16
  a3 $16
  e4 $8
  c4 $12
  REG3(0x9E) c4 $6
  $sq50
  g5 $12
  
  
  JUMP(^sq1_reentry)

};

_GENERIC = {

  ^sq2_overflow
  
  // 0

  SETLOOP()
    r 168
  REPLAYLOOP(3)
  
  // 2
  
  ^sq2_loop
  
  r $8
  $lead_q
  $sq25
  
  SETLOOP()
    d2 $16
    CALL(^lead_main_1_entry2)
      CALL(^lead_main_1)
      CALL(^lead_main_1)
      CALL(^lead_main_1)
    CALL(^lead_main_2)
  REPLAYLOOP(1)
  
  // 4
    
  CHANSHIFT(12)
  d2 $16
  CALL(^lead_main_1_entry2)
  SETLOOP()
    CALL(^lead_main_1)
  REPLAYLOOP(2)
  CALL(^lead_main_2)
  
  // 5
  
  d2 $16
  CALL(^lead_main_1_entry2)
  CALL(^lead_main_1)
  CALL(^lead_main_1)
  r $16
  d2 $16
  f2 $16
  d2 $16
  
  $lead_l
  CHANSHIFT(0)
  a#2 $6
  e3 $6
  a3 $6
  c#4 $3
  $lead_q c#4 $12
  $lead_l
  r $3
  
  // 6
  
  $sq25
  $back_l
  
  d2 $16
  CALL(^lead_main_1_entry2)
  CALL(^back_main_1)
  CHANSHIFT(-2)
  CALL(^lead_main_1)
  CHANSHIFT(0)
  CALL(^back_main_1)
  CALL(^lead_main_2)
  
  // 7
  
  d2 $16
  CALL(^lead_main_1_entry2)
  CALL(^back_main_1)
  CHANSHIFT(-2)
  CALL(^lead_main_1)
  CHANSHIFT(0)
  CALL(^back_main_1)
  r $16
  c2 $16
  e2 $16
  d2 $16
  g2 $16
  d2 $16
  a2 $16
  d2 $16
  c3 $8
  f3 $8
  a2 $8
  d2 $8
  
  // 8
  
  $sq12
/*  CALL(^back_main2_wholestepup)
  CALL(^back_main2_halfstepup_entry2)
  CALL(^back_main2_halfstepdown)
  CALL(^back_main2_wholestepdown_entry2)
  CHANSHIFT(-2)
  CALL(^back_main2_wholestepup)
  CHANSHIFT(0)
  CALL(^back_main2_wholestepup_entry2)
  CALL(^back_main2_halfstepdown)
  CALL(^back_main2_wholestepdown_entry2) */
  CALL(^back_main2_1)
  CALL(^back_main2_2)
  CHANSHIFT(-2)
  CALL(^back_main2_1_wholestepdown)
  CHANSHIFT(0)
  CALL(^back_main2_1)
  CALL(^back_main2_3)
  
  $sq50
  c4 $16
  d4 $32_1 r $32_2
  c4 $8
  d4 $16
  c4 $32_1 r $32_2
  a3 $16
  r 35
  
  $sq12
  SETLOOP()
    e3 $16
    f3 $16
  REPLAYLOOP(2)
  f3 $16
  r 35
  
  // 9
  
  $sq50
  $back_l2
    CHANSHIFT(12)
    CALL(^back_main2_1)
    CALL(^back_main2_2)
    CHANSHIFT(10)
    CALL(^back_main2_1_wholestepdown)
    CHANSHIFT(12)
    CALL(^back_main2_1)
    CALL(^back_main2_3)
  $back_l
  CHANSHIFT(0)
  SETLOOP()
    d4 $16
    c3 $16
  REPLAYLOOP(5)
  SETLOOP()
    a1 $16
    a2 $16
  REPLAYLOOP(2)
  a1 $16
  r $8
  a2 $12
  
  // 10
  
  CALL(^back_main3_1)
  $lead_staccato
    SETLOOP()
      a1 $16
      a1 $16
      a1 $16
      CHANSHIFT(7)
    REPLAYLOOP(1)
    CHANSHIFT(0)
    a2 $16
    a2 $16
    a2 $16
    e3 $16
    a3 $16
    e3 $16
  $legato
  d#3 $16
  e3 $16
  d#3 $16
  e3 $16
  d#3 $16
  e3 $32_1 r $32_2
  e3 $4
  $back_q e3 $8
  $lead_l
  
  // 11
  
  CHANSHIFT(2)
  CALL(^back_main3_1)
  CHANSHIFT(0)
  d2 $16
  e2 $16
  f#2 $16
  e2 $16
  d2 $16
  a2 $16
  c3 $16
  d3 $16
  
  e3 $16
  d3 $16
  c3 $16
  d3 $16
  r $16
  $lead_q
    CALL(^lead_main3_4)
  $back_l
  
  // 12
  
  CHANSHIFT(5)
  CALL(^back_main3_1)
  CHANSHIFT(0)
  $lead_staccato
    a#5 $16
    c6 $16
    a5 $16
    a#5 $16
    g5 $16
    a5 $16
    f5 $16
    g5 $16
    
    e5 $16
    f5 $16
    d5 $16
    e5 $16
  $legato
  f5 $16
  e5 $16
  d5 $16
  c#5 $16
  d5 $16
  e5 $16
  c#5 $8
  REG3(0x94) c#5 $8
  $lead_q c#5 $8
  $lead_l
  
  JUMP(^sq2_reentry)

};

_GENERIC = {

  ^tri_overflow
  
  // 0
  
  SETLOOP()
    CALL(^bass_intro_1)
  REPLAYLOOP(7)
  
  // 2
  
  ^tri_loop
  
  SETLOOP()
    CALL(^bass_main_1)
    CALL(^bass_main_2)
    CALL(^bass_main_2_2)
    CALL(^bass_main_3)
    CALL(^bass_main_3_2)
  REPLAYLOOP(2)
  
  // 5
  
  CALL(^bass_main_1)
  CALL(^bass_main_2)
  CHANSHIFT(-4)
  CALL(^bass_main_2_2)
  CHANSHIFT(-2)
  CALL(^bass_main_3)
  CHANSHIFT(3)
  CALL(^bass_main_3_2)
  CHANSHIFT(7)
  SETLOOP()
    $crash  CALL(^bass_intro_1_entry2)
  REPLAYLOOP(1)
  CHANSHIFT(0)
  SETLOOP()
    $crash  $trkick
            a2 $16
            r $16
  REPLAYLOOP(2)
  
  r $12
  
  SETLOOP()
    $sn r $16
  REPLAYLOOP(2)
  
  // 6
  
  SETLOOP()
    CALL(^bass_main_2)
    CALL(^bass_main_2_2)
    CHANSHIFT(-2)
  REPLAYLOOP(1)
  
  CHANSHIFT(0)
  CALL(^bass_main2_1)
  CALL(^bass_main2_1_2)
  
  // 7
  
  SETLOOP()
    CALL(^bass_main_2)
    CALL(^bass_main_2_2)
    CHANSHIFT(-2)
  REPLAYLOOP(1)
  
  CHANSHIFT(0)
  CALL(^bass_main2_1)
  CALL(^bass_main2_1_3)
  
  // 8
  
  CALL(^bass_main3_1)
  CALL(^bass_main3_1_2)
  CHANSHIFT(-1)
  CALL(^bass_main3_1)
  CHANSHIFT(7)
  CALL(^bass_main3_1_2)
  CHANSHIFT(6)
  CALL(^bass_main3_2)
  CHANSHIFT(4)
  CALL(^bass_main3_1_2)
  
  JUMP(^tri_reentry)
};

//*******************************
// BASE "Physical" channel data
//*******************************

_SQ1 = { 
  JUMP(^sq1_overflow)
  
  // 9.5
  
  // J0C
  SETLOOP()
    a5 2 a6 1 a5 2 a6 1 a5 1
    g5 2 g6 1 g5 2 g6 1 g5 1
  REPLAYLOOP(2)
  
  SETLOOP()
    c6 2 c7 1
  REPLAYLOOP(3)
  c6 2
  r $16
  
  SETLOOP()
    d6 2 d7 1
  REPLAYLOOP(3)
  d6 2
  r $16
  
  $sq12
  
  SETLOOP()
            c5 $32_1  $lead_q d5 $32_2
    $lead_l d5 $32_1  $lead_q c5 $32_2
    $lead_l
  REPLAYLOOP(2)
  a5 $8
  REG3(0x94) a5 $8
  $lead_q a5 $8
  $lead_l
  
  // 10
  
  CALL(^lead_main3_1)
  CALL(^lead_main3_2)
  $sq50
  CALL(^lead_main3_3)
  g#3 $16
  a3 $16
  g#3 $16
  a3 $16
  g#3 $16
  a3 $32_1  $lead_q g#3 $32_2
  $lead_l
  c#4 $4  $lead_q c#4 $8
  $lead_l
  
  // 11
  
  $sq12
  CHANSHIFT(2)
  CALL(^lead_main3_1)
  CALL(^lead_main3_2)
  $sq50
  CALL(^lead_main3_3)
  CHANSHIFT(0)
  CALL(^lead_main3_4)
  r $16
  
  // 12
  
  $sq12
  CHANSHIFT(-7)
  CALL(^lead_main3_1)
  CHANSHIFT(5)
  CALL(^lead_main3_1)
  CHANSHIFT(17)
  CALL(^lead_main3_1)
  CHANSHIFT(0)
  a5 $16
  g5 $16
  f5 $16
  e5 $16
  f5 $16
  g5 $16
  e5 $8
  REG3(0x94) e5 $8
  $lead_q e5 $8
  $lead_l
  
  // 13
  
  CALL(^lead_main4_1)
  CHANSHIFT(1)
  CALL(^lead_main4_1)
  CHANSHIFT(0)
  CALL(^lead_main4_1)
  CHANSHIFT(-1)
  CALL(^lead_main4_1)
  
  // 14
  
  CHANSHIFT(0)
  CALL(^lead_main4_1)
  CHANSHIFT(1)
  CALL(^lead_main4_1)
  CHANSHIFT(3)
  CALL(^lead_main4_1)
  CHANSHIFT(0)
  c#6 $12
  REG3(0x95) c#6 $6
  r $12
  
  JUMP(^sq1_loop)
  
};

_SQ2 = {
//  JUMP(^sq2_overflow)
  
  JUMP(^sq2_overflow)
  
  // 13
  
  $sq25
  d2 $16
  CALL(^lead_main_1_entry2)
  r $16
  d2 $16
  f2 $16
  d2 $16
  CALL(^back_main4_1)
  d2 $16
  CALL(^lead_main_1_entry2)
  r $16
  d2 $16
  f2 $16
  d2 $16
  CHANSHIFT(-2)
  CALL(^back_main4_1)
  CHANSHIFT(0)
  
  // 14
  
  d2 $16
  CALL(^lead_main_1_entry2)
  r $16
  d2 $16
  f2 $16
  d2 $16
  CALL(^back_main4_1)
  r $16
  f2 $16
  f2 $16
  g#2 $16
  f2 $16
  a#2 $16
  f2 $16
  c3 $16
  f2 $16
  r $16
  f2 $16
  g#2 $16
  a2 63
  r $12
  
  JUMP(^sq2_loop)
  
};

_TRI = {
  
  JUMP(^tri_overflow)
  
  CHANSHIFT(0)
  CALL(^bass_main3_3)
  
  // 9
  
  SETLOOP()
    CALL(^bass_main3_1)
    CALL(^bass_main3_1_2)
    CHANSHIFT(2)
  REPLAYLOOP(1)
  CHANSHIFT(0)
  CALL(^bass_main3_4)
  
  // 10
  
  CALL(^bass_main4_1)
  CALL(^bass_main4_1_2)
  CALL(^bass_main4_1)
  CALL(^bass_main4_1_3)
  CALL(^bass_main4_1_4)
  
  // 11
  
  CHANSHIFT(2)
  CALL(^bass_main4_1)
  CALL(^bass_main4_1_2)
  CALL(^bass_main4_1)
  CALL(^bass_main4_1_3)
  CALL(^bass_main4_1_5)
  
  // 12
  
  CHANSHIFT(5)
  CALL(^bass_main4_1)
  CALL(^bass_main4_1_2)
  CALL(^bass_main4_2)
  
  // 13
  
  CHANSHIFT(0)
  CALL(^bass_main5_1)
  CHANSHIFT(1)
  CALL(^bass_main5_1)
  CHANSHIFT(0)
  CALL(^bass_main5_1)
  CHANSHIFT(-1)
  CALL(^bass_main5_2)
  
  // 14
  
  CHANSHIFT(0)
  CALL(^bass_main5_1)
  CHANSHIFT(1)
  CALL(^bass_main5_1)
  CHANSHIFT(3)
  CALL(^bass_main5_1)
  CHANSHIFT(0)
  $trkick
  a2 49
  SETLOOP()
    $sn a2 $16
  REPLAYLOOP(1)
  SETLOOP()
    $sn r $16
  REPLAYLOOP(1)
  
  JUMP(^tri_loop)
};

